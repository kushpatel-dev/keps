<section class="py-12 bg-[#fdf2d8]">
  <div class="max-w-full mx-auto px-4 sm:px-6 lg:px-8">
    <h2 class="text-3xl font-bold text-center mb-10">{{ section.settings.heading }}</h2>

    <!-- Scrollable Wrapper -->
    <div class="relative">
      <!-- Scroll Buttons -->
      <button id="scroll-left" class="hidden md:flex absolute left-0 top-1/2 -translate-y-1/2 z-10 bg-white shadow-lg rounded-full p-2 hover:bg-gray-100 transition">
        &#8592;
      </button>
      <button id="scroll-right" class="hidden md:flex absolute right-0 top-1/2 -translate-y-1/2 z-10 bg-white shadow-lg rounded-full p-2 hover:bg-gray-100 transition">
        &#8594;
      </button>

      <!-- Product Container -->
      <div id="scroll-container" class="overflow-x-auto scroll-smooth flex flex-nowrap gap-8 justify-start pb-4">

        {% for block in section.blocks %}
          {% assign product = all_products[block.settings.product] %}
          {% if product %}
            <div class="group relative flex flex-col rounded-2xl overflow-hidden shadow-md transition hover:shadow-xl hover:-translate-y-1 duration-300
              bg-white w-[90%] sm:w-[80%] md:w-[230px] lg:w-[315px] xl:w-[335px] flex-shrink-0 mx-auto md:mx-0">

              <!-- Product Image -->
              <div class="relative overflow-hidden">
                <img
                  height=""
                  width=""
                  src="{{ product.featured_image | image_url: width: 600, height: 400, crop: 'center' }}"
                  alt="{{ product.title | escape }}"
                  class="w-full h-48 sm:h-56 md:h-64 lg:h-72 object-cover transition-transform duration-300 group-hover:scale-105"
                  loading="lazy">
                <div class="absolute inset-0 bg-gradient-to-t from-black/40 to-transparent opacity-0 group-hover:opacity-100 transition duration-300"></div>
              </div>

              <!-- Text Content -->
              <div class="flex-1 p-4 sm:p-5 flex flex-col justify-between space-y-3">
                <h3 class="ctm-h3-title">
                  {{ product.title }}
                </h3>
                <p class="text-sm sm:text-base text-gray-500" style="font-family: cursive;">
                  {{ product.description | strip_html | truncatewords: 15 }}
                </p>

                <div class="flex items-center space-x-3">
                  {% if product.compare_at_price > product.price %}
                    <span class="text-lg sm:text-[18px] font-bold text-shadow-amber-900" style="font-family: Gloria Hallelujah, cursive;">
                      {{ product.price | money }}
                    </span>
                    <span class="text-base sm:text-[16px] text-gray-400 line-through">
                      {{ product.compare_at_price | money }}
                    </span>
                    <span class="ml-2 text-xs sm:text-sm text-green-600 font-semibold">
                      -{{ 100 | minus: product.price | times: 100.0 | divided_by: product.compare_at_price | round }}%
                    </span>
                  {% else %}
                    <span class="text-lg sm:text-xl font-bold text-shadow-amber-950">
                      {{ product.price | money }}
                    </span>
                  {% endif %}
                </div>
              </div>

              <!-- Button -->
              <div class="p-4 sm:p-5 pt-0">
                <a
                  href="{{ product.url }}"
                  class="block w-full text-center bg-amber-900 hover:bg-amber-700 text-white text-[14px] lg:text-[16px] font-medium py-2 sm:py-3 rounded-xl transition"
                  style="font-family: cursive;">
                  {{ block.settings.button_label }}
                </a>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      </div>
    </div>
    <div class="text-center mt-8">
      <a href="{{ section.settings.view_all_url }}" class="inline-block bg-orange-950 hover:bg-orange-900 text-white rounded-full px-5 py-2 md:px-[30px] md:py-[10px] text-xs md:text-[14px] font-semibold shadow-md transition focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2" style="font-family: cursive;">
        {{ section.settings.view_all_text }}
      </a>
    </div>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const scrollContainer = document.getElementById("scroll-container");
    const scrollLeftBtn = document.getElementById("scroll-left");
    const scrollRightBtn = document.getElementById("scroll-right");
  
    const updateScrollUI = () => {
      const hasOverflow = scrollContainer.scrollWidth > scrollContainer.clientWidth;
  
      if (hasOverflow) {
        scrollLeftBtn.style.display = 'flex';
        scrollRightBtn.style.display = 'flex';
        scrollContainer.classList.remove('justify-center');
        scrollContainer.classList.add('justify-start');
      } else {
        scrollLeftBtn.style.display = 'none';
        scrollRightBtn.style.display = 'none';
        scrollContainer.classList.remove('justify-start');
        scrollContainer.classList.add('justify-center');
      }
    };
  
    scrollLeftBtn.addEventListener("click", () => {
      scrollContainer.scrollBy({ left: -300, behavior: 'smooth' });
    });
  
    scrollRightBtn.addEventListener("click", () => {
      scrollContainer.scrollBy({ left: 300, behavior: 'smooth' });
    });
  
    // Drag to scroll (desktop only)
    let isDown = false;
    let startX;
    let scrollLeft;
  
    scrollContainer.addEventListener("mousedown", (e) => {
      if (window.innerWidth < 768) return;
      isDown = true;
      scrollContainer.classList.add("cursor-grabbing");
      startX = e.pageX - scrollContainer.offsetLeft;
      scrollLeft = scrollContainer.scrollLeft;
    });
  
    scrollContainer.addEventListener("mouseleave", () => {
      isDown = false;
      scrollContainer.classList.remove("cursor-grabbing");
    });
  
    scrollContainer.addEventListener("mouseup", () => {
      isDown = false;
      scrollContainer.classList.remove("cursor-grabbing");
    });
  
    scrollContainer.addEventListener("mousemove", (e) => {
      if (!isDown || window.innerWidth < 768) return;
      e.preventDefault();
      const x = e.pageX - scrollContainer.offsetLeft;
      const walk = (x - startX) * 2;
      scrollContainer.scrollLeft = scrollLeft - walk;
    });
  
    updateScrollUI();
    window.addEventListener("resize", updateScrollUI);
  });
</script>

{% schema %}
  {
    "name": "Coffee Types Grid",
    "settings": [
      {
        "type": "text",
        "id": "heading",
        "label": "Section Heading",
        "default": "Featured Coffee Types"
      }, {
        "type": "text",
        "id": "view_all_text",
        "label": "View All Button Text",
        "default": "View All"
      }, {
        "type": "url",
        "id": "view_all_url",
        "label": "View All Button URL"

      }

    ],
    "blocks": [
      {
        "type": "product_block",
        "name": "Coffee Type Card",
        "settings": [
          {
            "type": "product",
            "id": "product",
            "label": "Select Coffee Type"
          }, {
            "type": "text",
            "id": "button_label",
            "label": "Button Text",
            "default": "Shop Now"
          }
        ]
      }
    ],
    "max_blocks": 12,
    "presets": [
      {
        "name": "Coffee Types Grid",
        "category": "Custom"
      }
    ]
  }
{% endschema %}